
number = @{ (ASCII_DIGIT)+ }
string_literal = { "\"" ~ ASCII_ALPHANUMERIC* ~ "\"" }
identifier = @{ ASCII_ALPHANUMERIC+ }

WHITESPACE = _{ " " | NEWLINE }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" | "//" ~ ANY* }

plus = { "+" } 
minus = { "-" }
multi = { "*" }
divide = { "/" }

trueb = { "true" }
falseb = { "false" }

is = { "is" }
not = { "not" }

truth = { 
    trueb | 
    falseb | 
    not ~ truth | 
    is ~ identifier ~ expr 
}

logical_and = { "&&" }
logical_or = { "||" }
logical_eq = { "==" }
logical_smaller = { "<" }
logical_bigger = { ">" }
logical_smaller_eq = { "<=" }
logical_bigger_eq = { ">=" }
logical_not_eq = { "!=" }

factor = { 
    "(" ~ expr ~ ")" | 
    number |
    truth |
    identifier | 
    string_literal
}
term = { factor ~ ((multi | divide) ~ factor)* }
expr = { 
    term ~ ((plus | minus) ~ term)* ~ 
    ((
        logical_and | 
        logical_or | 
        logical_eq | 
        logical_smaller | 
        logical_bigger |
        logical_smaller_eq |
        logical_bigger_eq |
        logical_not_eq
    ) ~ expr)? 
}

arg = { expr ~ ( "," | &")" ) }

if_stmt = { "if" ~ expr ~ "then" ~ stmts? ~ "end." }
while_stmt = { "while" ~ expr ~ scope }
set_stmt = { "set" ~ identifier ~ "=" ~ expr ~ ";" }
var_stmt = { "var" ~ identifier ~ ("=" ~ expr)? ~ ";" }
program = { "program" ~ identifier ~ scope }
call_stmt = { expr ~ "(" ~ arg* ~ ")" ~ ";" }

stmt = {
    if_stmt | 
    while_stmt | 
    set_stmt |
    var_stmt | 
    program |
    call_stmt
}

stmts = { stmt* }

scope = { "begin" ~ stmts? ~ "end." }

file = { SOI ~ stmts? ~ EOI }